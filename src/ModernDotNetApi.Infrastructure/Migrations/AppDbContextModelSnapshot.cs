// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernDotNetApi.Infrastructure.Data;

#nullable disable

namespace ModernDotNetApi.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModernDotNetApi.Domain.Entities.ApiEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApiEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "open source",
                            Description = "openai api - 1",
                            Name = "openai -1",
                            Url = "http://openai.org/1"
                        },
                        new
                        {
                            Id = 2,
                            Category = "open source",
                            Description = "openai api - 2",
                            Name = "openai -2",
                            Url = "http://openai.org/2"
                        },
                        new
                        {
                            Id = 3,
                            Category = "open source",
                            Description = "openai api - 3",
                            Name = "openai -3",
                            Url = "http://openai.org/3"
                        },
                        new
                        {
                            Id = 4,
                            Category = "open source",
                            Description = "openai api - 4",
                            Name = "openai -4",
                            Url = "http://openai.org/4"
                        },
                        new
                        {
                            Id = 5,
                            Category = "open source",
                            Description = "openai api - 5",
                            Name = "openai -5",
                            Url = "http://openai.org/5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
